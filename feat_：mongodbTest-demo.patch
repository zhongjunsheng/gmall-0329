Index: .idea/libraries/Maven__org_mongodb_mongodb_driver_3_8_2.xml
===================================================================
--- .idea/libraries/Maven__org_mongodb_mongodb_driver_3_8_2.xml	(revision 67caf99153f4608c038608157afb3032cd7cd7d8)
+++ .idea/libraries/Maven__org_mongodb_mongodb_driver_3_8_2.xml	(revision 67caf99153f4608c038608157afb3032cd7cd7d8)
@@ -1,13 +0,0 @@
-<component name="libraryTable">
-  <library name="Maven: org.mongodb:mongodb-driver:3.8.2">
-    <CLASSES>
-      <root url="jar://D:/java-data/my-democode/maven-repository/org/mongodb/mongodb-driver/3.8.2/mongodb-driver-3.8.2.jar!/" />
-    </CLASSES>
-    <JAVADOC>
-      <root url="jar://D:/java-data/my-democode/maven-repository/org/mongodb/mongodb-driver/3.8.2/mongodb-driver-3.8.2-javadoc.jar!/" />
-    </JAVADOC>
-    <SOURCES>
-      <root url="jar://D:/java-data/my-democode/maven-repository/org/mongodb/mongodb-driver/3.8.2/mongodb-driver-3.8.2-sources.jar!/" />
-    </SOURCES>
-  </library>
-</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_mongodb_mongodb_driver_core_3_8_2.xml
===================================================================
--- .idea/libraries/Maven__org_mongodb_mongodb_driver_core_3_8_2.xml	(revision 67caf99153f4608c038608157afb3032cd7cd7d8)
+++ .idea/libraries/Maven__org_mongodb_mongodb_driver_core_3_8_2.xml	(revision 67caf99153f4608c038608157afb3032cd7cd7d8)
@@ -1,13 +0,0 @@
-<component name="libraryTable">
-  <library name="Maven: org.mongodb:mongodb-driver-core:3.8.2">
-    <CLASSES>
-      <root url="jar://D:/java-data/my-democode/maven-repository/org/mongodb/mongodb-driver-core/3.8.2/mongodb-driver-core-3.8.2.jar!/" />
-    </CLASSES>
-    <JAVADOC>
-      <root url="jar://D:/java-data/my-democode/maven-repository/org/mongodb/mongodb-driver-core/3.8.2/mongodb-driver-core-3.8.2-javadoc.jar!/" />
-    </JAVADOC>
-    <SOURCES>
-      <root url="jar://D:/java-data/my-democode/maven-repository/org/mongodb/mongodb-driver-core/3.8.2/mongodb-driver-core-3.8.2-sources.jar!/" />
-    </SOURCES>
-  </library>
-</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_starter_data_mongodb_2_1_8_RELEASE.xml
===================================================================
--- .idea/libraries/Maven__org_springframework_boot_spring_boot_starter_data_mongodb_2_1_8_RELEASE.xml	(revision 67caf99153f4608c038608157afb3032cd7cd7d8)
+++ .idea/libraries/Maven__org_springframework_boot_spring_boot_starter_data_mongodb_2_1_8_RELEASE.xml	(revision 67caf99153f4608c038608157afb3032cd7cd7d8)
@@ -1,13 +0,0 @@
-<component name="libraryTable">
-  <library name="Maven: org.springframework.boot:spring-boot-starter-data-mongodb:2.1.8.RELEASE">
-    <CLASSES>
-      <root url="jar://D:/java-data/my-democode/maven-repository/org/springframework/boot/spring-boot-starter-data-mongodb/2.1.8.RELEASE/spring-boot-starter-data-mongodb-2.1.8.RELEASE.jar!/" />
-    </CLASSES>
-    <JAVADOC>
-      <root url="jar://D:/java-data/my-democode/maven-repository/org/springframework/boot/spring-boot-starter-data-mongodb/2.1.8.RELEASE/spring-boot-starter-data-mongodb-2.1.8.RELEASE-javadoc.jar!/" />
-    </JAVADOC>
-    <SOURCES>
-      <root url="jar://D:/java-data/my-democode/maven-repository/org/springframework/boot/spring-boot-starter-data-mongodb/2.1.8.RELEASE/spring-boot-starter-data-mongodb-2.1.8.RELEASE-sources.jar!/" />
-    </SOURCES>
-  </library>
-</component>
\ No newline at end of file
Index: member-center/member-provider/src/test/java/member/provider/MogoDbApplicationTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member-center/member-provider/src/test/java/member/provider/MogoDbApplicationTest.java	(revision 67caf99153f4608c038608157afb3032cd7cd7d8)
+++ member-center/member-provider/src/test/java/member/provider/MogoDbApplicationTest.java	(date 1594052084626)
@@ -1,141 +1,147 @@
-package member.provider;
-
-import com.alibaba.fastjson.JSON;
-import member.center.com.pojo.School2;
-import member.center.com.pojo.Student;
-import member.provider.serviceImpl.MongoDbService;
-import member.provider.serviceImpl.MongoSchoolService;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.boot.test.context.SpringBootTest;
-import org.springframework.data.domain.Page;
-import org.springframework.data.domain.PageRequest;
-import org.springframework.data.domain.Sort;
-import org.springframework.test.context.junit4.SpringRunner;
-
-import java.util.List;
-import java.util.Optional;
-
-@RunWith(SpringRunner.class)
-@SpringBootTest
-public class MogoDbApplicationTest {
-
-    @Autowired
-    private MongoDbService mongoDbService;  //student 表/collection
-    @Autowired
-    private MongoSchoolService mongoSchoolService;  //school 表/collection
-
-
-
-    @Test
-    public void mongoDbUsergetAll(){
-        //mongoDb的collection名称必须是student或者Student
-        List<School2> all = mongoSchoolService.findAll();
-        System.out.println("所有记录是:"+all);
-    }
-
-
-    /**
-     * 创建分页请求.
-     */
-    private PageRequest buildPageRequest(int pageNumber, int pageSize,String sortType) {
-        Sort sort = null;
-        if ("id".equals(sortType)) {
-            sort = new Sort(Sort.Direction.DESC, "_id");
-        } else if ("age".equals(sortType)) {
-            //根据年龄降序
-            sort = new Sort(Sort.Direction.ASC, "age");
-        }
-        //参数1表示当前第几页,参数2表示每页的大小,参数3表示排序
-        return new PageRequest(pageNumber-1,pageSize,sort);
-    }
-
-
-    //新增和update是一回事都是掉save()
-    @Test
-    public void add(){
-        Student stu = new Student("7","zhongjunsheng",37);
-        Student save = mongoDbService.save(stu);
-        System.out.println(save);
-    }
-
-    //分页查询
-    @Test
-    public  void getPage(){
-       //构建分页信息
-        //PageRequest pageRequest = buildPageRequest(2,2,"age");
-        PageRequest pageRequest = buildPageRequest(2,2,null); //五排序
-        //查询指定分页的内容
-        Page<Student> all = mongoDbService.findAll(pageRequest);
-        System.out.println(all.getTotalElements());
-        System.out.println(all.getTotalPages());
-        List<Student> content = all.getContent();
-        System.out.println(JSON.toJSON(all));
-        System.out.println(content);
-
-    }
-
-
-
-    @Test
-    public void getAll(){
-        //mongoDb的collection名称必须是student或者Student
-        List<Student> all = mongoDbService.findAll();
-        System.out.println("所有记录是:"+all);
-    }
-
-    @Test
-    public void getById(){
-        //mongoDb的collection名称必须是student或者Student
-        Optional<Student> result = mongoDbService.findById("2");
-        Student student = result.get();
-        System.out.println("所有记录是:"+student);
-    }
-
-    @Test
-    public void getByName(){
-        //mongoDb的collection名称必须是student或者Student
-        List<Student> allen = mongoDbService.findByName("allen");
-        System.out.println("所有记录是:"+allen);
-    }
-
-    @Test
-    public void getByAge(){
-        //mongoDb的collection名称必须是student或者Student
-        List<Student> allen = mongoDbService.findByAgeLessThanEqual(30);
-        System.out.println("所有记录是:"+allen);
-    }
-    @Test
-    public void getByAgeBetween(){
-        //mongoDb的collection名称必须是student或者Student
-        List<Student> allen = mongoDbService.findByAgeBetween(30,40);
-        System.out.println("所有记录是:"+allen);
-    }
-
-
-    @Test
-    public void getNameLike(){
-        //mongoDb的collection名称必须是student或者Student
-        List<Student> allen = mongoDbService.findByNameLike("allen");
-        System.out.println("所有记录是:"+allen);
-    }
-
-    //跟新
-    @Test
-    public void update(){
-        Student stu = new Student("7","zhongjunsheng7",37);
-        Student save = mongoDbService.save(stu);
-        System.out.println(save);
-    }
-
-    //删除
-    @Test
-    public void del(){
-        Student stu = new Student("7","zhongjunsheng",20);
-        //mongoDbService.delete(stu);
-        mongoDbService.deleteById("7");
-    }
-}
-
-
+//package member.provider;
+//
+//import com.alibaba.fastjson.JSON;
+//import member.center.com.pojo.School2;
+//import member.center.com.pojo.Student;
+//import member.provider.serviceImpl.MongoDbService;
+//import member.provider.serviceImpl.MongoSchoolService;
+//import org.junit.Test;
+//import org.junit.runner.RunWith;
+//import org.springframework.beans.factory.annotation.Autowired;
+//import org.springframework.boot.test.context.SpringBootTest;
+//import org.springframework.data.domain.Page;
+//import org.springframework.data.domain.PageRequest;
+//import org.springframework.data.domain.Sort;
+//import org.springframework.test.context.junit4.SpringRunner;
+//
+//import java.util.List;
+//import java.util.Optional;
+//
+//@RunWith(SpringRunner.class)
+//@SpringBootTest
+//public class MogoDbApplicationTest {
+//
+//    @Autowired
+//    private MongoDbService mongoDbService;  //student 表/collection
+//    @Autowired
+//    private MongoSchoolService mongoSchoolService;  //school 表/collection
+//
+//
+//
+//    @Test
+//    public void mongoDbSchoolgetAll(){
+//        //mongoDb的collection名称必须是student或者Student
+//        List<School2> all = mongoSchoolService.findAll();
+//        System.out.println("所有记录是:"+all);
+//    }
+//
+//    @Test
+//    public void mongoDbSchoolAdd(){
+//        School2 school2 = new School2("20","allen",100,"清华");
+//        mongoSchoolService.save(school2);
+//    }
+//
+//
+//    /**
+//     * 创建分页请求.
+//     */
+//    private PageRequest buildPageRequest(int pageNumber, int pageSize,String sortType) {
+//        Sort sort = null;
+//        if ("id".equals(sortType)) {
+//            sort = new Sort(Sort.Direction.DESC, "_id");
+//        } else if ("age".equals(sortType)) {
+//            //根据年龄降序
+//            sort = new Sort(Sort.Direction.ASC, "age");
+//        }
+//        //参数1表示当前第几页,参数2表示每页的大小,参数3表示排序
+//        return new PageRequest(pageNumber-1,pageSize,sort);
+//    }
+//
+//
+//    //新增和update是一回事都是掉save()
+//    @Test
+//    public void add(){
+//        Student stu = new Student("7","zhongjunsheng",37);
+//        Student save = mongoDbService.save(stu);
+//        System.out.println(save);
+//    }
+//
+//    //分页查询
+//    @Test
+//    public  void getPage(){
+//       //构建分页信息
+//        //PageRequest pageRequest = buildPageRequest(2,2,"age");
+//        PageRequest pageRequest = buildPageRequest(2,2,null); //五排序
+//        //查询指定分页的内容
+//        Page<Student> all = mongoDbService.findAll(pageRequest);
+//        System.out.println(all.getTotalElements());
+//        System.out.println(all.getTotalPages());
+//        List<Student> content = all.getContent();
+//        System.out.println(JSON.toJSON(all));
+//        System.out.println(content);
+//
+//    }
+//
+//
+//
+//    @Test
+//    public void getAll(){
+//        //mongoDb的collection名称必须是student或者Student
+//        List<Student> all = mongoDbService.findAll();
+//        System.out.println("所有记录是:"+all);
+//    }
+//
+//    @Test
+//    public void getById(){
+//        //mongoDb的collection名称必须是student或者Student
+//        Optional<Student> result = mongoDbService.findById("2");
+//        Student student = result.get();
+//        System.out.println("所有记录是:"+student);
+//    }
+//
+//    @Test
+//    public void getByName(){
+//        //mongoDb的collection名称必须是student或者Student
+//        List<Student> allen = mongoDbService.findByName("allen");
+//        System.out.println("所有记录是:"+allen);
+//    }
+//
+//    @Test
+//    public void getByAge(){
+//        //mongoDb的collection名称必须是student或者Student
+//        List<Student> allen = mongoDbService.findByAgeLessThanEqual(30);
+//        System.out.println("所有记录是:"+allen);
+//    }
+//    @Test
+//    public void getByAgeBetween(){
+//        //mongoDb的collection名称必须是student或者Student
+//        List<Student> allen = mongoDbService.findByAgeBetween(30,40);
+//        System.out.println("所有记录是:"+allen);
+//    }
+//
+//
+//    @Test
+//    public void getNameLike(){
+//        //mongoDb的collection名称必须是student或者Student
+//        List<Student> allen = mongoDbService.findByNameLike("allen");
+//        System.out.println("所有记录是:"+allen);
+//    }
+//
+//    //跟新
+//    @Test
+//    public void update(){
+//        Student stu = new Student("7","zhongjunsheng7",37);
+//        Student save = mongoDbService.save(stu);
+//        System.out.println(save);
+//    }
+//
+//    //删除
+//    @Test
+//    public void del(){
+//        Student stu = new Student("7","zhongjunsheng",20);
+//        //mongoDbService.delete(stu);
+//        mongoDbService.deleteById("7");
+//    }
+//}
+//
+//
Index: member-center/member-provider/src/main/java/member/provider/controller/NacosController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member-center/member-provider/src/main/java/member/provider/controller/NacosController.java	(revision 67caf99153f4608c038608157afb3032cd7cd7d8)
+++ member-center/member-provider/src/main/java/member/provider/controller/NacosController.java	(date 1594051948776)
@@ -2,6 +2,8 @@
 
 
 import com.alibaba.nacos.api.config.annotation.NacosValue;
+import member.provider.config.MyConfig;
+import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.beans.factory.annotation.Value;
 import org.springframework.web.bind.annotation.RequestMapping;
 import org.springframework.web.bind.annotation.RestController;
@@ -9,6 +11,9 @@
 @RestController
 public class NacosController {
 
+    @Autowired
+    private MyConfig myConfig;
+
     @Value("${server.port}")
     private String port;
 
@@ -26,5 +31,10 @@
     public String city(){
         return "city:" + city;
     }
+
+    @RequestMapping("myconfig")
+    public String myconfig(){
+        return "id:" +myConfig.getId() +"....."+"secret:"+ myConfig.getSecret() ;
+    }
 }
 
Index: member-center/member-provider/src/main/java/member/provider/MemberProviderApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member-center/member-provider/src/main/java/member/provider/MemberProviderApplication.java	(revision 67caf99153f4608c038608157afb3032cd7cd7d8)
+++ member-center/member-provider/src/main/java/member/provider/MemberProviderApplication.java	(date 1594052024222)
@@ -5,7 +5,7 @@
 import org.springframework.boot.autoconfigure.SpringBootApplication;
 
 @SpringBootApplication
-//@NacosPropertySource(dataId = "example", autoRefreshed = true)
+@NacosPropertySource(dataId = "example", autoRefreshed = true)
 //@MapperScan("member.provider.mapper")
 //@EnableAspectJAutoProxy(proxyTargetClass = true, exposeProxy = true)
 public class MemberProviderApplication {
Index: member-center/member-provider/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member-center/member-provider/pom.xml	(revision 67caf99153f4608c038608157afb3032cd7cd7d8)
+++ member-center/member-provider/pom.xml	(date 1594052073000)
@@ -50,10 +50,10 @@
             <version>1.2.4</version>
         </dependency>
         <!--springdata集成mongoDb-->
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-data-mongodb</artifactId>
-        </dependency>
+        <!--<dependency>-->
+            <!--<groupId>org.springframework.boot</groupId>-->
+            <!--<artifactId>spring-boot-starter-data-mongodb</artifactId>-->
+        <!--</dependency>-->
         <!--rabbitMq和springboot的整合,一个依赖即可-->
         <!--<dependency>-->
             <!--<groupId>org.springframework.boot</groupId>-->
Index: member-center/member-api/src/main/java/member/center/com/pojo/School2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member-center/member-api/src/main/java/member/center/com/pojo/School2.java	(revision 67caf99153f4608c038608157afb3032cd7cd7d8)
+++ member-center/member-api/src/main/java/member/center/com/pojo/School2.java	(date 1594050331005)
@@ -3,6 +3,7 @@
 import lombok.Builder;
 import lombok.Data;
 import lombok.ToString;
+import org.springframework.data.annotation.Id;
 import org.springframework.data.mongodb.core.mapping.Document;
 import org.springframework.data.mongodb.core.mapping.Field;
 
@@ -11,12 +12,19 @@
 @ToString
 @Document(collection="school")  //mogodb中表名school 映射实体School2(实体名称和mogodb中表名表名不一致时使用该注解)
 public class School2 {
+    @Id
     private  String  id;
     private  String  name;
     private  Integer age;
     @Field("school_name")  //mogodb中字段时school_name 映射实体schoolName(驼峰) --- 实体和数据库中字段不一致时使用该注解
     private  String  schoolName;
 
+    public School2(String id, String name, Integer age, String schoolName) {
+        this.id = id;
+        this.name = name;
+        this.age = age;
+        this.schoolName = schoolName;
+    }
 
     public static void main(String[] args) {
         School2 user = School2.builder().id("1").name("allen").age(100).build();
Index: member-center/member-provider/src/main/java/member/provider/serviceImpl/MongoDbService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member-center/member-provider/src/main/java/member/provider/serviceImpl/MongoDbService.java	(revision 67caf99153f4608c038608157afb3032cd7cd7d8)
+++ member-center/member-provider/src/main/java/member/provider/serviceImpl/MongoDbService.java	(date 1594052063940)
@@ -1,19 +1,19 @@
-package member.provider.serviceImpl;
-
-import member.center.com.pojo.Student;
-import org.springframework.data.mongodb.repository.MongoRepository;
-
-import java.util.List;
-
-/**
- * mangoDB-springdata用法
- */
-public interface MongoDbService extends MongoRepository<Student,String> {
-    //自定义crud方法
-    List<Student> findByName(String name);
-    List<Student> findByAgeLessThanEqual(int age);
-    List<Student> findByAgeBetween(int a,int b);
-    List<Student> findByNameLike(String name);
-
-
-}
+//package member.provider.serviceImpl;
+//
+//import member.center.com.pojo.Student;
+//import org.springframework.data.mongodb.repository.MongoRepository;
+//
+//import java.util.List;
+//
+///**
+// * mangoDB-springdata用法
+// */
+//public interface MongoDbService extends MongoRepository<Student,String> {
+//    //自定义crud方法
+//    List<Student> findByName(String name);
+//    List<Student> findByAgeLessThanEqual(int age);
+//    List<Student> findByAgeBetween(int a,int b);
+//    List<Student> findByNameLike(String name);
+//
+//
+//}
Index: member-center/member-provider/src/main/java/member/provider/config/MongoDbConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member-center/member-provider/src/main/java/member/provider/config/MongoDbConfig.java	(date 1594052036743)
+++ member-center/member-provider/src/main/java/member/provider/config/MongoDbConfig.java	(date 1594052036743)
@@ -0,0 +1,35 @@
+//package member.provider.config;
+//
+//import org.springframework.beans.factory.BeanFactory;
+//import org.springframework.beans.factory.NoSuchBeanDefinitionException;
+//import org.springframework.context.annotation.Bean;
+//import org.springframework.context.annotation.Configuration;
+//import org.springframework.data.convert.CustomConversions;
+//import org.springframework.data.mongodb.MongoDbFactory;
+//import org.springframework.data.mongodb.core.convert.DbRefResolver;
+//import org.springframework.data.mongodb.core.convert.DefaultDbRefResolver;
+//import org.springframework.data.mongodb.core.convert.DefaultMongoTypeMapper;
+//import org.springframework.data.mongodb.core.convert.MappingMongoConverter;
+//import org.springframework.data.mongodb.core.mapping.MongoMappingContext;
+//
+//
+///**
+// * / Don't save _class to mongo 配置
+// */
+//@Configuration
+//public class MongoDbConfig {
+//    @Bean
+//    public MappingMongoConverter mappingMongoConverter(MongoDbFactory factory, MongoMappingContext context, BeanFactory beanFactory) {
+//        DbRefResolver dbRefResolver = new DefaultDbRefResolver(factory);
+//        MappingMongoConverter mappingConverter = new MappingMongoConverter(dbRefResolver, context);
+//        try {
+//            mappingConverter.setCustomConversions(beanFactory.getBean(CustomConversions.class));
+//        } catch (NoSuchBeanDefinitionException ignore) {
+//        }
+//
+//        // Don't save _class to mongo
+//        mappingConverter.setTypeMapper(new DefaultMongoTypeMapper(null));
+//
+//        return mappingConverter;
+//    }
+//}
Index: member-center/member-provider/src/main/java/member/provider/serviceImpl/MongoSchoolService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member-center/member-provider/src/main/java/member/provider/serviceImpl/MongoSchoolService.java	(revision 67caf99153f4608c038608157afb3032cd7cd7d8)
+++ member-center/member-provider/src/main/java/member/provider/serviceImpl/MongoSchoolService.java	(date 1594052063940)
@@ -1,7 +1,7 @@
-package member.provider.serviceImpl;
-
-import member.center.com.pojo.School2;
-import org.springframework.data.mongodb.repository.MongoRepository;
-
-public interface MongoSchoolService extends MongoRepository<School2,String> {
-}
+//package member.provider.serviceImpl;
+//
+//import member.center.com.pojo.School2;
+//import org.springframework.data.mongodb.repository.MongoRepository;
+//
+//public interface MongoSchoolService extends MongoRepository<School2,String> {
+//}
Index: member-center/member-provider/src/main/resources/application-dev.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member-center/member-provider/src/main/resources/application-dev.yml	(revision 67caf99153f4608c038608157afb3032cd7cd7d8)
+++ member-center/member-provider/src/main/resources/application-dev.yml	(date 1594052366808)
@@ -1,10 +1,9 @@
-#nacos:
-  #config:
-    #server-addr: 127.0.0.1:8848    ##用nacos做配置中心动态修改配置参数,如果配置中心挂了则用项目里的配置文件
+nacos:
+  config:
+    server-addr: 127.0.0.1:8848    ##用nacos做配置中心动态修改配置参数,如果配置中心挂了则用项目里的配置文件
     #server-addr: 192.168.127.131:8848  #nginx的配置url （集群时是VIP地址）
 server:
    port: 8081
-
 city: zhanjian
 # mysql springBoot2.0之后的话是com.mysql.cj.jdbc.Driver
 spring:
@@ -20,11 +19,11 @@
       port: 6379
       timeout: 3000
 
-  data:
-    mongodb:
-      host: 192.168.127.131
-      port: 27017
-      database: school
+  #data:
+   # mongodb:
+    #  host: 192.168.127.131
+     # port: 27017
+      #database: school
 
 
 #mybatis别名配置
Index: member-center/member-provider/src/main/java/member/provider/config/MyConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member-center/member-provider/src/main/java/member/provider/config/MyConfig.java	(date 1594053359039)
+++ member-center/member-provider/src/main/java/member/provider/config/MyConfig.java	(date 1594053359039)
@@ -0,0 +1,16 @@
+package member.provider.config;
+
+import com.alibaba.nacos.api.config.annotation.NacosConfigurationProperties;
+import lombok.Data;
+import org.springframework.boot.context.properties.ConfigurationProperties;
+import org.springframework.context.annotation.Configuration;
+
+@Data
+@Configuration
+@ConfigurationProperties(prefix = "app")
+@NacosConfigurationProperties(dataId = "example", autoRefreshed = true)  //需要加上这个动态刷新配置bean
+public class MyConfig {
+
+    private String id;
+    private String secret;
+}
